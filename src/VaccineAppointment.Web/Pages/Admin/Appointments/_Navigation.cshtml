@model NavigationViewModel
@{
    var month = Model.SelectedDate.ToYearMonth();
    var prevMonth = month.ToDateInterval().Start.PlusDays(-1).ToYearMonth();
    var nextMonth = month.ToDateInterval().End.PlusDays(1).ToYearMonth();

    var selectedDate = Model.SelectedDate;
    var prevDate = selectedDate.PlusDays(-1);
    var nextDate = selectedDate.PlusDays(1);

    var slotId = Model.SlotId;
}
<div class="col-lg-4">
    <div>
        <a class="btn btn-link pl-0" asp-page="@Model.LinkPage" asp-route-year="@prevMonth.Year" asp-route-month="@prevMonth.Month" asp-route-day="@prevMonth.OnDayOfMonth(1).Day">前の月</a>
        <a class="btn btn-link pl-0" asp-page="@Model.LinkPage" asp-route-year="@nextMonth.Year" asp-route-month="@nextMonth.Month" asp-route-day="@nextMonth.OnDayOfMonth(1).Day">次の月</a>
    </div>
    <h2>@month.Year 年 @month.Month 月</h2>
</div>
<div class="col-lg-8">
    <div class="d-flex justify-content-between">
        @if (Model.DayNavigationDisabled)
        {
            <div>
                <button class="btn btn-link pl-0 disabled">前の日</button>
                <button class="btn btn-link pl-0 disabled">次の日</button>
            </div>
        }
        else
        {
            <div>
                <a class="btn btn-link pl-0" asp-page="@Model.LinkPage" asp-route-year="@prevDate.Year" asp-route-month="@prevDate.Month" asp-route-day="@prevDate.Day">前の日</a>
                <a class="btn btn-link pl-0" asp-page="@Model.LinkPage" asp-route-year="@nextDate.Year" asp-route-month="@nextDate.Month" asp-route-day="@nextDate.Day">次の日</a>
            </div>
        }
        <div>
            <a class="btn btn-sm btn-outline-secondary" asp-page="SlotDetails" asp-route-year="@selectedDate.Year" asp-route-month="@selectedDate.Month" asp-route-day="@selectedDate.Day" asp-route-id="@slotId">戻る</a>
        </div>
    </div>
    <h2>@Model.SelectedDate.Day 日 (@Model.SelectedDate.DayOfWeek)</h2>
</div>